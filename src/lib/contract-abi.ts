const CONTRACT_ADDRESSES = {
  11155111: "0x52B1f728c5772eA9CF17b2662fD0c90852C51a23", // Sepolia
  31337: "", // Hardhat
} as const;

export const getContractAddress = (
  chainId: number | undefined,
): `0x${string}` => {
  if (!chainId) return CONTRACT_ADDRESSES[11155111] as `0x${string}`;
  return (CONTRACT_ADDRESSES[chainId as keyof typeof CONTRACT_ADDRESSES] ||
    CONTRACT_ADDRESSES[11155111]) as `0x${string}`;
};

export const NFT_MARKETPLACE_ABI = [
  {
    type: "constructor",
    stateMutability: "undefined",
    payable: false,
    inputs: [{ type: "address", name: "ethPriceFeed" }],
  },
  {
    type: "error",
    name: "NftMarketplace__AlreadyListed",
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
    ],
  },
  { type: "error", name: "NftMarketplace__NoProceeds", inputs: [] },
  {
    type: "error",
    name: "NftMarketplace__NotApprovedForMarketplace",
    inputs: [],
  },
  {
    type: "error",
    name: "NftMarketplace__NotListed",
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
    ],
  },
  { type: "error", name: "NftMarketplace__NotOwner", inputs: [] },
  { type: "error", name: "NftMarketplace__PriceMustBeAboveZero", inputs: [] },
  {
    type: "error",
    name: "NftMarketplace__PriceNotMet",
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
      { type: "uint256", name: "price" },
    ],
  },
  { type: "error", name: "NftMarketplace__TokenNotSupported", inputs: [] },
  { type: "error", name: "NftMarketplace__TransferFailed", inputs: [] },
  { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
  {
    type: "event",
    anonymous: false,
    name: "ItemBought",
    inputs: [
      { type: "address", name: "buyer", indexed: true },
      { type: "address", name: "nftAddress", indexed: true },
      { type: "uint256", name: "tokenId", indexed: true },
      { type: "uint256", name: "price", indexed: false },
      { type: "address", name: "paymentToken", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "ItemCanceled",
    inputs: [
      { type: "address", name: "seller", indexed: true },
      { type: "address", name: "nftAddress", indexed: true },
      { type: "uint256", name: "tokenId", indexed: true },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "ItemListed",
    inputs: [
      { type: "address", name: "seller", indexed: true },
      { type: "address", name: "nftAddress", indexed: true },
      { type: "uint256", name: "tokenId", indexed: true },
      { type: "uint256", name: "price", indexed: false },
      { type: "address", name: "paymentToken", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "TokenAdded",
    inputs: [
      { type: "address", name: "token", indexed: true },
      { type: "address", name: "priceFeed", indexed: true },
      { type: "uint8", name: "decimals", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "TokenRemoved",
    inputs: [{ type: "address", name: "token", indexed: true }],
  },
  {
    type: "function",
    name: "NATIVE_TOKEN",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "address", name: "" }],
  },
  {
    type: "function",
    name: "addSupportedToken",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "token" },
      { type: "address", name: "priceFeed" },
      { type: "uint8", name: "decimals" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "buyItem",
    constant: false,
    stateMutability: "payable",
    payable: true,
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
      { type: "address", name: "paymentToken" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "cancelListing",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "getListing",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
    ],
    outputs: [
      {
        type: "tuple",
        name: "",
        components: [
          { type: "uint256", name: "price" },
          { type: "address", name: "seller" },
          { type: "address", name: "paymentToken" },
        ],
      },
    ],
  },
  {
    type: "function",
    name: "getListingPriceInToken",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
      { type: "address", name: "targetToken" },
    ],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "getOwner",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "address", name: "" }],
  },
  {
    type: "function",
    name: "getProceeds",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      { type: "address", name: "seller" },
      { type: "address", name: "token" },
    ],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "getTokenInfo",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "token" }],
    outputs: [
      {
        type: "tuple",
        name: "",
        components: [
          { type: "bool", name: "isSupported" },
          { type: "address", name: "priceFeed" },
          { type: "uint8", name: "decimals" },
        ],
      },
    ],
  },
  {
    type: "function",
    name: "isTokenSupportedPublic",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "token" }],
    outputs: [{ type: "bool", name: "" }],
  },
  {
    type: "function",
    name: "listItem",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
      { type: "uint256", name: "price" },
      { type: "address", name: "paymentToken" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "removeSupportedToken",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "token" }],
    outputs: [],
  },
  {
    type: "function",
    name: "updateListing",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "nftAddress" },
      { type: "uint256", name: "tokenId" },
      { type: "uint256", name: "newPrice" },
      { type: "address", name: "newPaymentToken" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "withdrawProceeds",
    constant: false,
    payable: false,
    inputs: [{ type: "address", name: "token" }],
    outputs: [],
  },
] as const;

export const BASIC_NFT_ABI = [
  {
    type: "constructor",
    stateMutability: "undefined",
    payable: false,
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721IncorrectOwner",
    inputs: [
      { type: "address", name: "sender" },
      { type: "uint256", name: "tokenId" },
      { type: "address", name: "owner" },
    ],
  },
  {
    type: "error",
    name: "ERC721InsufficientApproval",
    inputs: [
      { type: "address", name: "operator" },
      { type: "uint256", name: "tokenId" },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidApprover",
    inputs: [{ type: "address", name: "approver" }],
  },
  {
    type: "error",
    name: "ERC721InvalidOperator",
    inputs: [{ type: "address", name: "operator" }],
  },
  {
    type: "error",
    name: "ERC721InvalidOwner",
    inputs: [{ type: "address", name: "owner" }],
  },
  {
    type: "error",
    name: "ERC721InvalidReceiver",
    inputs: [{ type: "address", name: "receiver" }],
  },
  {
    type: "error",
    name: "ERC721InvalidSender",
    inputs: [{ type: "address", name: "sender" }],
  },
  {
    type: "error",
    name: "ERC721NonexistentToken",
    inputs: [{ type: "uint256", name: "tokenId" }],
  },
  {
    type: "event",
    anonymous: false,
    name: "Approval",
    inputs: [
      { type: "address", name: "owner", indexed: true },
      { type: "address", name: "approved", indexed: true },
      { type: "uint256", name: "tokenId", indexed: true },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "ApprovalForAll",
    inputs: [
      { type: "address", name: "owner", indexed: true },
      { type: "address", name: "operator", indexed: true },
      { type: "bool", name: "approved", indexed: false },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "DogMinted",
    inputs: [{ type: "uint256", name: "tokenId", indexed: true }],
  },
  {
    type: "event",
    anonymous: false,
    name: "Transfer",
    inputs: [
      { type: "address", name: "from", indexed: true },
      { type: "address", name: "to", indexed: true },
      { type: "uint256", name: "tokenId", indexed: true },
    ],
  },
  {
    type: "function",
    name: "TOKEN_URI",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "string", name: "" }],
  },
  {
    type: "function",
    name: "approve",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "to" },
      { type: "uint256", name: "tokenId" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "balanceOf",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "address", name: "owner" }],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "getApproved",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "uint256", name: "tokenId" }],
    outputs: [{ type: "address", name: "" }],
  },
  {
    type: "function",
    name: "getTokenCounter",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "uint256", name: "" }],
  },
  {
    type: "function",
    name: "isApprovedForAll",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      { type: "address", name: "owner" },
      { type: "address", name: "operator" },
    ],
    outputs: [{ type: "bool", name: "" }],
  },
  {
    type: "function",
    name: "mintNft",
    constant: false,
    payable: false,
    inputs: [],
    outputs: [],
  },
  {
    type: "function",
    name: "name",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "string", name: "" }],
  },
  {
    type: "function",
    name: "ownerOf",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "uint256", name: "tokenId" }],
    outputs: [{ type: "address", name: "" }],
  },
  {
    type: "function",
    name: "safeTransferFrom",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "from" },
      { type: "address", name: "to" },
      { type: "uint256", name: "tokenId" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "safeTransferFrom",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "from" },
      { type: "address", name: "to" },
      { type: "uint256", name: "tokenId" },
      { type: "bytes", name: "data" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "setApprovalForAll",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "operator" },
      { type: "bool", name: "approved" },
    ],
    outputs: [],
  },
  {
    type: "function",
    name: "supportsInterface",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "bytes4", name: "interfaceId" }],
    outputs: [{ type: "bool", name: "" }],
  },
  {
    type: "function",
    name: "symbol",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [{ type: "string", name: "" }],
  },
  {
    type: "function",
    name: "tokenURI",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [{ type: "uint256", name: "tokenId" }],
    outputs: [{ type: "string", name: "" }],
  },
  {
    type: "function",
    name: "transferFrom",
    constant: false,
    payable: false,
    inputs: [
      { type: "address", name: "from" },
      { type: "address", name: "to" },
      { type: "uint256", name: "tokenId" },
    ],
    outputs: [],
  },
] as const;
